# -------------------------------------------------------------------
# This is the OSM Generic New style file for converting OSM ways
# into Garmin lines.
# Any line prefaced with # is a comment and will not be applied.
# Each line is a rule, of the generalised format:
#  OSM_tag(s)_to_match  [Garmin_type_code resolution]
# See http://wiki.openstreetmap.org/wiki/Mkgmap/help/style_rules
# and http://wiki.openstreetmap.org/wiki/Mkgmap/help/Custom_styles
# for more information.

#limit artificial cycleways to to resolution 24
mkgmap:synthesised=yes & bicycle=yes { set mkgmap:highest-resolution-only = true; delete name }

# Assign the street name for house number search
highway=* & name=* { set mkgmap:street='${name}' }
tunnel=* & tunnel:name=* & name!=$tunnel:name {name '${name} (${tunnel:name})' | '${tunnel:name} (${ref})' | '${tunnel:name}'} 
bridge=* & bridge:name=* & name!=$bridge:name  {name '${name} (${bridge:name})' |  '${bridge:name} (${ref})' | '${bridge:name}'}
include 'inc/address';

# Aeroways
aeroway=runway & is_closed()!=true [0x27 resolution 20 continue with_actions]
aeroway=taxiway & is_closed()!=true [0x27 resolution 23 continue with_actions]

# Mark highways with the toll flag
highway=* & (toll=yes|toll=true) { set mkgmap:toll=yes }

# Hide proposed ways
(highway=proposed | highway=proposal | highway=planned | highway ~ '.*proposed.*') {delete highway;delete junction}
# Hide removed ways
(highway=razed | highway=dismantled) {deletealltags}
# Hide abandoned ways. Abandoned highways have some evidence of their former existence but are no longer used. These
# abandoned highways could be useful in topographical maps.
# https://wiki.openstreetmap.org/wiki/Key:abandoned:
((abandoned:highway=* & highway!=*) | highway=abandoned) {deletealltags}
# Hide other non-existent ways
(highway=unbuilt | highway=neverbuilt | highway=rejected | highway ~ 'x-.*') {delete highway;delete junction}
# Remove highway tag from ways which are not suitable for routing
highway=traffic_signals | highway=junction | highway=island | highway=centre_line | highway=traffic_island  {delete highway} 
highway=piste | highway=ski {delete highway}
highway=no | highway=none {delete highway}

# Disable dead-end-checks for unaccessible oneways
highway=* & oneway=yes & (access=private|access=no)
{add mkgmap:dead-end-check=false}
# Validation-like checks (uncomment to enable)
#highway=motorway_link & oneway!=yes & oneway!=no { echo "motorway_link lacks oneway" }
highway=motorway|highway=motorway_link { add oneway=yes }

# Set highway names to include the reference if there is one
highway=motorway { name '${ref|highway-symbol:hbox} ${name}' | '${ref|highway-symbol:hbox}' | '${name}' }

(highway=motorway_link | highway=trunk_link) & mkgmap:exit_hint=true & mkgmap:dest_hint=true
  { name '${destination:ref|subst: =>} ${destination|subst:;=> |subst:/=> }' | 
         '${ref|subst: =>} ${destination|subst:;=> |subst:/=> }' | 
         '${destination|subst:;=> |subst:/=> }' |
         'Exit ${mkgmap:exit_hint_ref} ${mkgmap:exit_hint_name}' | 
         'Exit ${mkgmap:exit_hint_ref} ${mkgmap:exit_hint_exit_to}' | 
         'Exit ${mkgmap:exit_hint_exit_to}' |
         'Exit ${mkgmap:exit_hint_name}' |
         'Exit ${mkgmap:exit_hint_ref}'
       }

(highway=motorway_link | highway=trunk_link) & mkgmap:exit_hint!=* & mkgmap:dest_hint=true
  { name '${destination:ref|subst: =>} ${destination|subst:;=> |subst:/=> }' |
         '${ref|subst: =>} ${destination|subst:;=> |subst:/=> }' | 
         '${destination|subst:;=> |subst:/=> }'
       }

(highway=motorway_link | highway=trunk_link) & mkgmap:exit_hint=true & mkgmap:dest_hint!=*
  { name 'Exit ${mkgmap:exit_hint_ref} ${mkgmap:exit_hint_name}' | 
         'Exit ${mkgmap:exit_hint_ref} ${mkgmap:exit_hint_exit_to}' | 
         'Exit ${mkgmap:exit_hint_exit_to}' |
         'Exit ${mkgmap:exit_hint_name}' |
         'Exit ${mkgmap:exit_hint_ref}'
       }
              
highway=trunk {name '${ref|highway-symbol:hbox} ${name}' | '${ref|highway-symbol:hbox}' | '${name}'; addlabel '${name} (${ref})' }
highway=primary {name '${ref|highway-symbol:box} ${name}' | '${ref|highway-symbol:box}' | '${name}'; addlabel '${name} (${ref})' }
highway=secondary | highway=tertiary {name '${ref|highway-symbol:oval} ${name}' | '${ref|highway-symbol:oval}' | '${name}'; addlabel '${name} (${ref})' }
highway=* {name '${name}' | '${ref}' }

# Flag paved roads
highway=* & (surface=asphalt | surface=paved | surface=sett | 
    surface=concrete | surface=concrete:lanes | surface=concrete:plates | 
    surface=paving_stones  | surface=cobblestone  | 
        surface=cobblestone:flattened  | surface=metal  | surface=wood) 
{ set mkgmap:unpaved=0 }
highway=* & tracktype=grade1 & surface!=* { set mkgmap:unpaved=0 }

# Flag unpaved roads.
highway=* & mkgmap:unpaved!=0 & (  
    surface=* |
        mtb:scale=* | 
    tracktype ~ 'grade[2-6]')
{ add mkgmap:unpaved=1 }
highway=* & (
    mtb:scale ~ '[2-6].' |
    sac_scale ~ '.*(mountain|alpine)_hiking' |
    sport=via_ferrata)
{ set mkgmap:unpaved=1 }
(highway=bridleway | highway=path | highway=track) & mkgmap:unpaved!=0 { add mkgmap:unpaved=1 }
(highway=unsurfaced | highway=via_ferrata) { set mkgmap:unpaved=1 }
highway=* & mkgmap:unpaved!=1 & smoothness ~ '.*(bad|horrible|impassable)' { add mkgmap:road-speed = '-2' } 
highway ~  '.*(trunk|primary|secondary|tertiary|unclassified|residential|minor|road).*' & mkgmap:unpaved=1 { add mkgmap:road-speed = '-1' ; addlabel 'unpaved' } [0x10002 resolution 21 continue with_actions]
highway ~  '.*(byway|living_street|service).*' & mkgmap:unpaved=1 [0x10002 resolution 23 continue with_actions]

highway=* & ice_road=yes { addlabel 'ice road' }  [0x10002 resolution 24]

# Good ways without relation
highway=* & mkgmap:fast_road!=* & (int_ref=* | network=e-road | network=AH | network=TAH | network=US:I | network=US:US) {add mkgmap:fast_road=yes}
# Not best for car routing
highway=* & (access=hov | hov=designated | oneway=reversible) {set mkgmap:road-class=-2; set mkgmap:road-speed=-2; delete mkgmap:fast_road}

# Convert generic path to most specific
highway=footway & snowplowing!=no
& (bicycle=designated|bicycle=official|mtb=designated)
{set highway=cycleway; set bicycle=yes}
highway=path & snowplowing!=no
& (bicycle=designated|bicycle=official|mtb=designated)
{set highway=cycleway; set bicycle=yes}
highway=path & (horse=designated|horse=permissive|horse=official)
{set highway=bridleway}

leisure=track & area!=yes
{add highway=footway; name '${name} (${sport})' | '${name}'}
(man_made=pier | man_made=piste:halfpipe) & area!=yes
{add highway=pedestrian; name '${ref} ${name}' | '${ref}' | '${name}' }
#railway=platform {add highway=pedestrian}

# Roundabouts
junction=roundabout & highway=trunk [0x0c road_class=3 road_speed=2 resolution 18 continue with_actions]
junction=roundabout & (highway=primary | highway=primary_link) & mkgmap:fast_road=yes [0x0c road_class=4 road_speed=2 resolution 24 continue with_actions]
junction=roundabout & highway=primary & mkgmap:fast_road!=yes [0x0c road_class=3 road_speed=2 resolution 19 continue with_actions]
junction=roundabout & (highway=secondary | highway=secondary_link) & mkgmap:fast_road=yes [0x0c road_class=3 road_speed=2 resolution 24 continue with_actions] 
junction=roundabout & highway=secondary & mkgmap:fast_road!=yes [0x0c road_class=2 road_speed=2 resolution 20 continue with_actions]
junction=roundabout & highway=tertiary [0x0c road_class=1 road_speed=1 resolution 21 continue with_actions]
junction=roundabout & highway=unclassified [0x0c road_class=1 road_speed=1 resolution 21 continue with_actions]
junction=roundabout & !(highway=unclassified|highway=tertiary|highway=secondary|highway=primary| highway=trunk) [0x0c road_class=0 road_speed=1 resolution 22 continue with_actions]
junction=roundabout {set access=no}

# display direction arrows on highways
highway=* & (oneway=yes | oneway=1 | oneway=true | oneway=-1) [0x10000 resolution 24 continue with_actions]


# ways under construction, disused
highway=construction  {add access = no; add bicycle = yes; add foot = yes; add mkgmap:dead-end-check = false } [0x10007 road_class=0 road_speed=1 resolution 23]
highway=* & disused=yes [0x10007 default_name="disused" road_class=0 road_speed=1 resolution 24]

# Lower the road speed of certain ways
highway=* & construction=* & maxspeed!=* { add mkgmap:road-speed = '-1' }
highway=* & disused=yes & maxspeed!=* { add mkgmap:road-speed = '-2' }

# bridges & tunnels
bridge=* & bridge!=no & highway!=proposed & bridge!=proposed & railway!=proposed [0x2b resolution 24 continue with_actions]
(tunnel=yes | tunnel=true | tunnel=1) & highway!=proposed & railway!=* & waterway!=* [0x2a resolution 24 continue with_actions]

# Ways sorted roughly by descending order of class
highway=motorway & mkgmap:fast_road=yes [0x01 road_class=4 road_speed=7 resolution 14]
highway=motorway [0x01 road_class=4 road_speed=7 resolution 15]
highway=motorway_link & (mkgmap:exit_hint=true | mkgmap:dest_hint=*) [0x06 road_class=4 road_speed=2 resolution 20]
highway=motorway_link [0x09 road_class=4 road_speed=2 resolution 20]
highway=trunk & mkgmap:fast_road=yes [0x02 road_class=4 road_speed=5 resolution 15]
highway=trunk [0x02 road_class=4 road_speed=5 resolution 18]
highway=trunk_link & (mkgmap:exit_hint=true | mkgmap:dest_hint=*) [0x06 road_class=4 road_speed=2 resolution 20]
highway=trunk_link [0x09 road_class=4 road_speed=2 resolution 20]
highway=* & highway!=proposed & motorroad=yes [0x02 road_class=4 road_speed=4 resolution 18]
highway=* & motorroad=yes {add bicycle = no; add foot = no}
highway=primary & mkgmap:fast_road=yes [0x03 road_class=4 road_speed=4 resolution 17]
highway=primary [0x03 road_class=3 road_speed=4 resolution 19]
highway=primary_link & (mkgmap:exit_hint=true | mkgmap:dest_hint=*) & mkgmap:fast_road=yes [0x06 road_class=4 road_speed=1 resolution 21]
highway=primary_link & (mkgmap:exit_hint=true | mkgmap:dest_hint=*) [0x06 road_class=3 road_speed=1 resolution 21]
highway=primary_link & mkgmap:fast_road=yes [0x08 road_class=4 road_speed=1 resolution 21]
highway=primary_link [0x08 road_class=3 road_speed=1 resolution 21]
highway=secondary & mkgmap:fast_road=yes [0x04 road_class=3 road_speed=3 resolution 18]
highway=secondary [0x04 road_class=2 road_speed=3 resolution 20]
highway=secondary_link & mkgmap:fast_road=yes [0x08 road_class=3 road_speed=1 resolution 22]
highway=secondary_link [0x08 road_class=2 road_speed=1 resolution 22]
highway=tertiary [0x05 road_class=1 road_speed=3 resolution 20]
highway=tertiary_link [0x08 road_class=1 road_speed=1 resolution 22]
highway=minor [0x06 road_class=1 road_speed=3 resolution 21]
highway=unclassified [0x06 road_class=0 road_speed=3 resolution 21]

# Some countries allow, others disallow bicycling on pedestrian streets.
# To allow bicycling, add 'add bicycle=yes'
highway=pedestrian [0x11 road_class=0 road_speed=0 resolution 22 continue]
highway=living_street [0x06 road_class=0 road_speed=1 resolution 22]
highway=residential [0x06 road_class=0 road_speed=2 resolution 22]
highway=bridleway [0x16 road_class=0 road_speed=0 resolution 23]
highway=byway [0x16 road_class=0 road_speed=0 resolution 23]

highway=service & service=parking_aisle
[0x07 road_class=0 road_speed=1 resolution 24]
highway=service & (service=alley|service=driveway)
[0x07 road_class=0 road_speed=0 resolution 23]
highway=service [0x07 road_class=0 road_speed=2 resolution 22]

highway=cycleway & mkgmap:unpaved=1 { name '${name} (${mname|not-equal:name})' | '${mname}' | '${name}' }  [0x12 road_class=0 road_speed=0 resolution 23]
highway=track & mtb=designated & mkgmap:unpaved=1 { name '${name} (${mname|not-equal:name})' | '${mname}' | '${name}' }  [0x12 road_class=0 road_speed=0 resolution 23]
highway=cycleway [0x10 road_class=0 road_speed=1 resolution 23]

highway=footway|highway=path [0x16 road_class=0 road_speed=0 resolution 23]
highway=steps [0x13 road_class=0 road_speed=0 resolution 24]
highway=track [0x0a road_class=0 road_speed=1 resolution 22]
highway=unsurfaced [0x0a road_class=0 road_speed=1 resolution 22]
highway=road { add mkgmap:dead-end-check = false} [0x06 road_class=0 road_speed=1 resolution 22]

# Mop up any unrecognised highway types
highway=* & highway!=proposed & area!=yes & highway!=pedestrian & highway!=services [0x07 road_class=0 road_speed=0 resolution 23] 

#natural=coastline [0x15 resolution 12]
natural=cliff [0x10115 resolution 24]
#power=line [0x29 resolution 21]

aerialway=cable_car | aerialway=gondola | aerialway=mixed_lift [0x00 resolution 22]
aerialway=t-bar  | aerialway=chair_lift  [0x00 resolution 24]

railway=rail & tunnel=yes  [0x10113 resolution 20 continue with_actions]
railway=rail & tunnel!=yes & (trainroute=yes | highspeed=yes | usage=main) [0x10015 resolution 18-21 continue with_actions]
railway=rail & tunnel!=yes & (trainroute=yes | highspeed=yes | usage=main) [0x10014 resolution 22 continue]
railway=rail & tunnel!=yes  [0x14 resolution 24]

#railway=abandoned [0x0a road_class=0 road_speed=1 resolution 22]
railway=light_rail & !(tunnel=yes) [0x10015 default_name="light rail" resolution 22]
railway=narrow_gauge & !(tunnel=yes) [0x10014 resolution 22]
railway=preserved & !(tunnel=yes) [0x10014 resolution 22]
railway=subway & !(tunnel=yes) [0x10014 resolution 21]
railway=tram & !(tunnel=yes) [0x10015 default_name="tram" resolution 24]
(railway=platform | public_transport=platform) & is_closed()!=true  [0x11 road_class=0 road_speed=0 default_name="platform" resolution 24]

route=ferry & foot!=no {set foot_ferry=yes} 
route=ferry  {set foot=no; add mkgmap:ferry=1} [0x1b road_class=3 road_speed=0 resolution 19 continue with_actions]
route=ferry & foot_ferry=yes {setaccess no; set foot=yes; delete bicycle; delete motorcar} [0x1b road_class=0 road_speed=0 resolution 23 continue with_actions]
route=ferry & seasonal=* {name '${name|def:} seasonal(${seasonal}) ${opening_hours|def:}'} [0x10017  resolution 18]
route=ferry {name '${name|def:} ${opening_hours|def:}' | '${note}' } [0x10017  resolution 18]

waterway=river & natural!=water [0x18 resolution 18-20 continue]
(waterway=river | waterway=canal) & intermittent=yes & natural!=water [0x26 resolution 21]
waterway=river & natural!=water [0x1f resolution 21 continue]
waterway=canal & natural!=water [0x18 resolution 20-22 continue]
waterway=canal & natural!=water [0x1f resolution 24 continue]
(waterway=stream | waterway=drain) & intermittent=yes & natural!=water [0x10A02 resolution 24]
waterway=stream & natural!=water [0x18 resolution 22 continue]
waterway=drain & natural!=water [0x18 resolution 24 continue]
waterway=ditch | barrier=ditch  [0x10A02 resolution 24]
waterway=rapids|waterway=waterfall [0x1f resolution 22]


(man_made=cable|(man_made=* & man_made ~ '.*pipe.*')) & area!=yes &
tunnel!=yes & location != underground
{name '${name} (${operator})' | '${name}' | '${operator}' }
[0x28 resolution 23]

# The following boundary styles are after the highway rules because ways
# are frequently tagged with both and we want the highway to take priority.
boundary=administrative { name '${mkgmap:boundary_name}' }
boundary2=yes & member=yes & maritime!=yes & boundary_type!=territorial_waters & natural!=coastline { name '${boundary2_name}' }  [0x1c resolution 14-17 continue]
boundary2=yes & member=yes & maritime!=yes & boundary_type!=territorial_waters & natural!=coastline { name '${boundary2_name}' } [0x1e resolution 18]
boundary4=yes & member=yes & maritime!=yes & boundary_type!=territorial_waters & natural!=coastline { name '${boundary4_name}' } [0x1d resolution 16]

include 'inc/contours';

<finalize>
# The finalizer section is executed for each element when a rule with an element type matches


# calculate the road speed based on maxspeed tag
include 'inc/roadspeed'; 
# calculate the access rules
include 'inc/access';

name=* { name '${name}' }

highway=* & ref=* { addlabel '${ref}' }
highway=* & int_ref=* { addlabel '${int_ref}' }
highway=* & nat_ref=* { addlabel '${nat_ref}' }
highway=* & reg_ref=* { addlabel '${reg_ref}' }
